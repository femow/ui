(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[598],{5986:(e,n,t)=>{"use strict";t.r(n),t.d(n,{frontMatter:()=>s,contentTitle:()=>m,metadata:()=>d,toc:()=>p,default:()=>c});var a=t(2122),i=t(9756),r=(t(7294),t(3905)),o=t(8818),l=["components"],s={title:"Navs and tabs"},m=void 0,d={unversionedId:"Nav",id:"Nav",isDocsHomePage:!1,title:"Navs and tabs",description:"Create flexible navigation elements like tabs, navbars, and menus.",source:"@site/docs/Nav.mdx",sourceDirName:".",slug:"/Nav",permalink:"/ui/Nav",version:"current",frontMatter:{title:"Navs and tabs"},sidebar:"docs",previous:{title:"Modal",permalink:"/ui/Modal"},next:{title:"Overlay",permalink:"/ui/Overlay"}},p=[{value:"Styling",id:"styling",children:[]},{value:"Dropdowns",id:"dropdowns",children:[]},{value:"Tabs",id:"tabs",children:[{value:"Acessibility",id:"acessibility",children:[]}]}],v={toc:p};function c(e){var n=e.components,s=(0,i.Z)(e,l);return(0,r.kt)("wrapper",(0,a.Z)({},v,s,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Create flexible navigation elements like tabs, navbars, and menus."),(0,r.kt)(o.default,{imports:function(){return(0,o.allValues)({"@restart/ui":Promise.all([t.e(592),t.e(287)]).then(t.bind(t,6352))})},mdxType:"ImportContext"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'import { Nav, NavItem } from "@restart/ui";\n\n<Nav className="flex space-x-4" activeKey="/home">\n  <NavItem href="/home">Active</NavItem>\n\n  <NavItem eventKey="link-1">Link</NavItem>\n\n  <NavItem eventKey="link-2">Link</NavItem>\n\n  <NavItem eventKey="disabled" disabled>\n    Disabled\n  </NavItem>\n</Nav>;\n'))),(0,r.kt)("h2",{id:"styling"},"Styling"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"NavItem"),"s implement a few bits of state that likely need visual styling to use."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"disabled")," whether the ",(0,r.kt)("inlineCode",{parentName:"li"},"NavItem")," is actionable or not."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"active"),' whether the nav item is "selected", this may be because the ',(0,r.kt)("inlineCode",{parentName:"li"},"activeKey"),"\non ",(0,r.kt)("inlineCode",{parentName:"li"},"Nav")," matches the ",(0,r.kt)("inlineCode",{parentName:"li"},"NavItem"),"'s key, or because the ",(0,r.kt)("inlineCode",{parentName:"li"},"active")," prop was passed to it.")),(0,r.kt)(o.default,{imports:function(){return(0,o.allValues)({clsx:Promise.all([t.e(592),t.e(287)]).then(t.bind(t,6010)),"@restart/ui":Promise.all([t.e(592),t.e(287)]).then(t.bind(t,6352))})},mdxType:"ImportContext"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'import clsx from "clsx";\nimport { Nav, useNavItem } from "@restart/ui";\n\nfunction NavLink({ href, disabled, children }) {\n  const [navItemProps, meta] = useNavItem({\n    key: href,\n    disabled,\n  });\n\n  return (\n    <a\n      href={href}\n      {...navItemProps}\n      className={clsx(\n        "py-3 px-4 rounded",\n        disabled && "opacity-50 cursor-not-allowed",\n        meta.isActive\n          ? "bg-primary !text-white"\n          : "hover:text-primary hover:bg-gray-200"\n      )}\n    >\n      {children}\n    </a>\n  );\n}\n\nfunction Example() {\n  const [activeKey, setActiveKey] = useState("/home");\n\n  return (\n    <Nav\n      className="flex"\n      activeKey={activeKey}\n      onSelect={setActiveKey}\n    >\n      <NavLink href="/home">Home</NavLink>\n\n      <NavLink href="/about">About</NavLink>\n\n      <NavLink href="orderd" disabled>\n        Orders\n      </NavLink>\n    </Nav>\n  );\n}\n'))),(0,r.kt)("h2",{id:"dropdowns"},"Dropdowns"),(0,r.kt)("p",null,"Dropdown components can be used in ",(0,r.kt)("inlineCode",{parentName:"p"},"Nav"),"s as well:"),(0,r.kt)(o.default,{imports:function(){return(0,o.allValues)({clsx:Promise.all([t.e(592),t.e(287)]).then(t.bind(t,6010)),"@restart/ui":Promise.all([t.e(592),t.e(287)]).then(t.bind(t,6352)),"../src/Dropdown":Promise.all([t.e(592),t.e(287)]).then(t.bind(t,3235))})},mdxType:"ImportContext"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'import clsx from "clsx";\nimport {\n  Nav,\n  useNavItem,\n  useDropdownToggle,\n} from "@restart/ui";\n\nimport Dropdown from "../src/Dropdown";\n\nconst NavLink = React.forwardRef(\n  ({ href, disabled, children, onClick }, ref) => {\n    const [navItemProps, meta] = useNavItem({\n      key: href,\n      onClick,\n      disabled,\n    });\n\n    return (\n      <a\n        ref={ref}\n        href={href}\n        {...navItemProps}\n        className={clsx(\n          "py-3 px-4 rounded",\n          disabled && "opacity-50 cursor-not-allowed",\n          meta.isActive\n            ? "bg-primary !text-white"\n            : "hover:text-primary hover:bg-gray-200"\n        )}\n      >\n        {children}\n      </a>\n    );\n  }\n);\n\nfunction Example() {\n  const [activeKey, setActiveKey] = useState("/home");\n\n  return (\n    <Nav\n      className="flex"\n      activeKey={activeKey}\n      onSelect={setActiveKey}\n    >\n      <NavLink href="/home">Home</NavLink>\n\n      <NavLink href="/about">About</NavLink>\n\n      <NavLink href="orderd" disabled>\n        Orders\n      </NavLink>\n      <Dropdown>\n        <Dropdown.Toggle as={NavLink}>More</Dropdown.Toggle>\n        <Dropdown.Menu>\n          <Dropdown.Item eventKey="4.1">\n            Action\n          </Dropdown.Item>\n          <Dropdown.Item eventKey="4.2">\n            Another action\n          </Dropdown.Item>\n          <Dropdown.Item eventKey="4.3">\n            Something else here\n          </Dropdown.Item>\n        </Dropdown.Menu>\n      </Dropdown>\n    </Nav>\n  );\n}\n'))),(0,r.kt)("h2",{id:"tabs"},"Tabs"),(0,r.kt)("p",null,"Create dynamic tabbed interfaces from a ",(0,r.kt)("inlineCode",{parentName:"p"},"Nav"),", as described in the WAI-ARIA Authoring Practices.\nNote that tabbed UIs have specific behavior that sets them apart from a navigation menu, even\nwhen styled similarly."),(0,r.kt)(o.default,{imports:function(){return(0,o.allValues)({clsx:Promise.all([t.e(592),t.e(287)]).then(t.bind(t,6010)),"@restart/ui":Promise.all([t.e(592),t.e(287)]).then(t.bind(t,6352))})},mdxType:"ImportContext"},(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-jsx",metastring:"live",live:!0},'import clsx from "clsx";\n\nimport {\n  Button,\n  Tabs,\n  TabPanel,\n  Nav,\n  useNavItem,\n} from "@restart/ui";\n\nfunction Tab({ eventKey, ...props }) {\n  const [navItemProps, meta] = useNavItem({\n    key: eventKey,\n  });\n\n  return (\n    <Button\n      {...props}\n      {...navItemProps}\n      className={clsx(\n        "-mb-px py-2 px-4",\n        "hover:bg-gray-200 cursor-pointer rounded-t border",\n        meta.isActive\n          ? "border-gray-200"\n          : "border-transparent"\n      )}\n      style={\n        meta.isActive\n          ? { borderBottomColor: "white" }\n          : undefined\n      }\n    />\n  );\n}\n\n<Tabs defaultActiveKey="1">\n  <Nav className="flex border-b">\n    <Tab eventKey="1">One</Tab>\n    <Tab eventKey="2">Two</Tab>\n    <Tab eventKey="3">Three</Tab>\n  </Nav>\n  <div className="p-6">\n    <TabPanel eventKey="1">\n      <p>one!</p>\n    </TabPanel>\n    <TabPanel eventKey="2">\n      <p>two!</p>\n    </TabPanel>\n    <TabPanel eventKey="3">\n      <p>three!</p>\n    </TabPanel>\n  </div>\n</Tabs>;\n'))),(0,r.kt)("h3",{id:"acessibility"},"Acessibility"),(0,r.kt)("p",null,"In the context of a ",(0,r.kt)("inlineCode",{parentName:"p"},"Tabs")," component the ",(0,r.kt)("inlineCode",{parentName:"p"},"Nav")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"NavItem"),"s will contextually\napply the correct ARIA roles, as well as implement the required keyboard navigation."))}c.isMDXComponent=!0}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXNzZXRzL2pzLzJkMTNhMDNhLjNmNDU2MWEzLmpzIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vbXktd2Vic2l0ZS9hc3NldHMvanMvMmQxM2EwM2EuM2Y0NTYxYTMuanMiXSwibWFwcGluZ3MiOiJBQUFBIiwic291cmNlUm9vdCI6IiJ9